---
const { id } = Astro.params;
---

<!doctype html>
<html lang="es">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>Redirigiendo...</title>
        <style>
            * {
                margin: 0;
                padding: 0;
                box-sizing: border-box;
            }

            body {
                font-family:
                    -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto,
                    sans-serif;
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                min-height: 100vh;
                display: flex;
                align-items: center;
                justify-content: center;
                overflow: hidden;
            }

            .container {
                text-align: center;
                color: white;
                position: relative;
            }

            .loading-text {
                font-size: 1.5rem;
                font-weight: 300;
                margin-bottom: 2rem;
                opacity: 0;
                animation: fadeIn 0.8s ease-in-out 0.5s forwards;
            }

            .dots-container {
                display: flex;
                justify-content: center;
                gap: 8px;
                margin-bottom: 2rem;
            }

            .dot {
                width: 12px;
                height: 12px;
                border-radius: 50%;
                background: rgba(255, 255, 255, 0.8);
                animation: bounce 1.4s infinite ease-in-out;
            }

            .dot:nth-child(1) {
                animation-delay: -0.32s;
            }
            .dot:nth-child(2) {
                animation-delay: -0.16s;
            }
            .dot:nth-child(3) {
                animation-delay: 0s;
            }

            @keyframes bounce {
                0%,
                80%,
                100% {
                    transform: scale(0.8);
                    opacity: 0.5;
                }
                40% {
                    transform: scale(1.2);
                    opacity: 1;
                }
            }

            @keyframes fadeIn {
                to {
                    opacity: 1;
                }
            }

            .spinner {
                width: 60px;
                height: 60px;
                border: 3px solid rgba(255, 255, 255, 0.3);
                border-top: 3px solid white;
                border-radius: 50%;
                animation: spin 1s linear infinite;
                margin: 0 auto 2rem;
                opacity: 0;
                animation:
                    spin 1s linear infinite,
                    fadeIn 0.8s ease-in-out 1s forwards;
            }

            @keyframes spin {
                0% {
                    transform: rotate(0deg);
                }
                100% {
                    transform: rotate(360deg);
                }
            }

            .message {
                font-size: 0.9rem;
                opacity: 0.8;
                font-weight: 300;
                animation: fadeIn 0.8s ease-in-out 1.5s forwards;
                opacity: 0;
            }

            .error-message {
                color: #ff6b6b;
                font-size: 1rem;
                margin-top: 1rem;
                display: none;
            }

            /* Partículas flotantes */
            .particle {
                position: absolute;
                width: 4px;
                height: 4px;
                background: rgba(255, 255, 255, 0.6);
                border-radius: 50%;
                animation: float 6s infinite ease-in-out;
            }

            @keyframes float {
                0%,
                100% {
                    transform: translateY(0px) rotate(0deg);
                    opacity: 0.6;
                }
                50% {
                    transform: translateY(-20px) rotate(180deg);
                    opacity: 1;
                }
            }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="loading-text">Preparando tu enlace...</div>

            <div class="spinner"></div>

            <div class="dots-container">
                <div class="dot"></div>
                <div class="dot"></div>
                <div class="dot"></div>
            </div>

            <div class="message">Esto solo tomará un momento</div>
            <div class="error-message" id="errorMessage">
                Hubo un problema al cargar el enlace. Inténtalo de nuevo.
            </div>
        </div>

        <!-- Partículas flotantes -->
        <div class="particle" style="top: 20%; left: 10%; animation-delay: 0s;">
        </div>
        <div class="particle" style="top: 60%; left: 80%; animation-delay: 1s;">
        </div>
        <div class="particle" style="top: 30%; left: 70%; animation-delay: 2s;">
        </div>
        <div class="particle" style="top: 80%; left: 20%; animation-delay: 3s;">
        </div>
        <div class="particle" style="top: 10%; left: 90%; animation-delay: 4s;">
        </div>

        <script is:inline define:vars={{ id }}>
            // Función para hacer la petición y redirigir
            async function fetchAndRedirect() {
                try {
                    const response = await fetch(`/api/s/${id}`);

                    if (!response.ok) {
                        throw new Error("Error en la respuesta del servidor");
                    }

                    const data = await response.json();

                    // Pequeña pausa para mostrar la animación
                    setTimeout(() => {
                        if (data.url) {
                            window.location.href = data.url;
                        } else {
                            showError();
                        }
                    }, 5000);
                } catch (error) {
                    console.error("Error:", error);
                    showError();
                }
            }

            function showError() {
                document.querySelector(".loading-text").textContent = "Oops!";
                document.querySelector(".spinner").style.display = "none";
                document.querySelector(".dots-container").style.display =
                    "none";
                document.querySelector(".message").style.display = "none";
                document.getElementById("errorMessage").style.display = "block";
            }

            // Ejecutar cuando la página cargue
            document.addEventListener("DOMContentLoaded", fetchAndRedirect);
        </script>
    </body>
</html>
