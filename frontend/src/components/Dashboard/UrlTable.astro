---
import api from "../../utils/api";

const baseUrl = new URL(Astro.request.url).origin;

const token = Astro.locals.authToken;

if (!token) {
    return new Response(null, { status: 302, headers: { Location: "/" } });
}

let data: any[] = [];

try {
    const response = await api("shorturl/")({
        method: "GET",
        headers: {
            Authorization: `Bearer ${token}`,
        },
    });

    if (!response.ok) {
        throw new Error(`API error: ${response.status}`);
    }

    data = await response.json();
} catch (err) {
    console.error("Failed to fetch short URLs:", err);
}
---

<section
    class="bg-white/5 backdrop-blur-sm border border-white/10 rounded-2xl shadow-md overflow-x-auto"
>
    <table class="w-full table-auto text-left">
        <thead class="bg-white/10 text-sm uppercase text-gray-400">
            <tr>
                <th class="px-6 py-4">Id</th>
                <th class="px-6 py-4">Url Original</th>
                <th class="px-6 py-4">Url Corta</th>
                <th class="px-6 py-4 text-right">Creado el</th>
            </tr>
        </thead>
        <tbody class="text-sm text-gray-700 divide-y divide-white/10">
            {
                data.map((url) => (
                    <tr class="hover:bg-white/5 transition-colors">
                        <td class="px-6 py-4 font-mono">{url.id}</td>
                        <td class="px-6 py-4">
                            <a
                                href={url.url}
                                target="_blank"
                                rel="noopener noreferrer"
                            >
                                {url.url}
                            </a>
                        </td>
                        <td class="px-6 py-4 flex items-center gap-2">
                            <a
                                href={`${baseUrl}/s/${url.code}`}
                                target="_blank"
                                rel="noopener noreferrer"
                                class="truncate max-w-[180px] block"
                            >
                                {`${baseUrl}/s/${url.code}`}
                            </a>
                            <button
                                type="button"
                                class="text-xs text-blue-500 hover:underline btn-copy"
                                data-url={`${baseUrl}/s/${url.code}`}
                            >
                                Copiar
                            </button>
                            <button
                                type="button"
                                class="text-xs text-red-500 hover:underline btn-delete"
                                data-id={url.id}
                            >
                                Eliminar
                            </button>
                        </td>
                        <td class="px-6 py-4 text-right space-x-2">
                            {new Date(url.created_at).toLocaleString()}
                        </td>
                    </tr>
                ))
            }
        </tbody>
    </table>
</section>

<script>
    // Botones de eliminar
    const copyBtns = document.querySelectorAll(".btn-copy");

    copyBtns.forEach((btn) => {
        btn.addEventListener("click", () => {
            if (!(btn instanceof HTMLElement)) return;

            const url = btn.dataset.url;

            if (!url) return;

            navigator.clipboard.writeText(url).then((c) => {
                console.log("Copiado en clipboard");
            });
        });
    });

    const deleteBtns = document.querySelectorAll(".btn-delete");

    deleteBtns.forEach((btn) => {
        btn.addEventListener("click", async () => {
            if (!(btn instanceof HTMLElement)) return;
            const id = btn.dataset.id;

            if (!id) return;

            const response = await fetch(`/api/urls/${id}`, {
                method: "DELETE",
            });

            if (!response.ok) {
                throw new Error("Error en la respuesta del servidor");
            }

            const result = await response.json();
            if (result.redirect) {
                window.location.href = result.redirect;
            }
        });
    });
</script>
