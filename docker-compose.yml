version: "3.8"

services:
  traefik:
    image: traefik:v3.0
    command:
      - "--api.insecure=true" # Solo para desarrollo
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8081:8080" # Panel de Traefik
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - app-network

  backend:
    build: ./backend
    container_name: backend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`api.localhost`)"
      - "traefik.http.services.backend.loadbalancer.server.port=8080"
    depends_on:
      - database
      - valkey
    env_file: ./backend/.env
    environment:
      PORT: 8080
    networks:
      - app-network

  frontend:
    build: ./frontend
    container_name: frontend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`localhost`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"
    env_file: ./frontend/.env
    environment:
      PORT: 3000
    networks:
      - app-network

  database:
    image: postgres:17
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: linksnap
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network

  valkey:
    image: valkey/valkey:latest
    container_name: valkey
    ports:
      - "6377:6379"
    volumes:
      - valkeydata:/data
    networks:
      - app-network

volumes:
  pgdata:
  valkeydata:

networks:
  app-network:
    driver: bridge
